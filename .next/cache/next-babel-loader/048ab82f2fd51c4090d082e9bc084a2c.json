{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Users\\\\ndoto\\\\Documents\\\\GitHub\\\\bkfs-frontend-engineer-test-1\\\\pages\\\\classification.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Layout from '../components/MyLayout';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n\nvar PopulateLists = /*#__PURE__*/function (_React$Component) {\n  _inherits(PopulateLists, _React$Component);\n\n  var _super = _createSuper(PopulateLists);\n\n  function PopulateLists() {\n    _classCallCheck(this, PopulateLists);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PopulateLists, [{\n    key: \"render\",\n    value: function render() {\n      __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 9\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 9\n        }\n      }, \"Document Classification\"), __jsx(DropdownButton, {\n        id: \"dropdown-customers\",\n        title: \"Customer Names\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 13\n        }\n      }, __jsx(Dropdown.Item, {\n        href: \"#/action-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 17\n        }\n      }, \"Action\"), __jsx(Dropdown.Item, {\n        href: \"#/action-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }\n      }, \"Another action\"), __jsx(Dropdown.Item, {\n        href: \"#/action-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }\n      }, \"Something else\"), __jsx(Dropdown.Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }\n      }), __jsx(Dropdown.Item, {\n        eventKey: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }\n      }, \"Clear all selections\")), __jsx(DropdownButton, {\n        id: \"dropdown-documents\",\n        title: \"Document Types\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      }, __jsx(Dropdown.Item, {\n        href: \"#/action-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }, \"Action\"), __jsx(Dropdown.Item, {\n        href: \"#/action-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, \"Another action\"), __jsx(Dropdown.Item, {\n        href: \"#/action-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }, \"Something else\"), __jsx(Dropdown.Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }), __jsx(Dropdown.Item, {\n        eventKey: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }, \"Clear all selections\")));\n    }\n  }]);\n\n  return PopulateLists;\n}(React.Component); // export default function Classification() {\n//     return (\n//         <Layout>\n//             <p>Document Classification</p>\n//                 <DropdownButton id=\"dropdown-customers\" title=\"Customer Names\">\n//                     <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n//                     <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n//                     <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n//                     <Dropdown.Divider />\n//                     <Dropdown.Item eventKey=\"4\">Clear all selections</Dropdown.Item>\n//                 </DropdownButton>\n//                 <DropdownButton id=\"dropdown-documents\" title=\"Document Types\">\n//                     <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n//                     <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n//                     <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n//                     <Dropdown.Divider />\n//                     <Dropdown.Item eventKey=\"4\">Clear all selections</Dropdown.Item>\n//                 </DropdownButton>\n//         </Layout>\n//     );\n// }","map":{"version":3,"sources":["D:/Users/ndoto/Documents/GitHub/bkfs-frontend-engineer-test-1/pages/classification.js"],"names":["React","Layout","Dropdown","DropdownButton","PopulateLists","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;;IAEMC,a;;;;;;;;;;;;;6BACQ;AACN,YAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADA,EAEI,MAAC,cAAD;AAAgB,QAAA,EAAE,EAAC,oBAAnB;AAAwC,QAAA,KAAK,EAAC,gBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,QAAD,CAAU,IAAV;AAAe,QAAA,IAAI,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,MAAC,QAAD,CAAU,IAAV;AAAe,QAAA,IAAI,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,EAGI,MAAC,QAAD,CAAU,IAAV;AAAe,QAAA,IAAI,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,EAII,MAAC,QAAD,CAAU,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI,MAAC,QAAD,CAAU,IAAV;AAAe,QAAA,QAAQ,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCALJ,CAFJ,EAUI,MAAC,cAAD;AAAgB,QAAA,EAAE,EAAC,oBAAnB;AAAwC,QAAA,KAAK,EAAC,gBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,QAAD,CAAU,IAAV;AAAe,QAAA,IAAI,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,MAAC,QAAD,CAAU,IAAV;AAAe,QAAA,IAAI,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,EAGI,MAAC,QAAD,CAAU,IAAV;AAAe,QAAA,IAAI,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,EAII,MAAC,QAAD,CAAU,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI,MAAC,QAAD,CAAU,IAAV;AAAe,QAAA,QAAQ,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCALJ,CAVJ;AAkBH;;;;EApBuBJ,KAAK,CAACK,S,GAuBlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport Layout from '../components/MyLayout';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\n\r\nclass PopulateLists extends React.Component {\r\n    render () {\r\n        <Layout>\r\n        <p>Document Classification</p>\r\n            <DropdownButton id=\"dropdown-customers\" title=\"Customer Names\">\r\n                <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item eventKey=\"4\">Clear all selections</Dropdown.Item>\r\n            </DropdownButton>\r\n\r\n            <DropdownButton id=\"dropdown-documents\" title=\"Document Types\">\r\n                <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item eventKey=\"4\">Clear all selections</Dropdown.Item>\r\n            </DropdownButton>\r\n        </Layout>\r\n    }\r\n}\r\n\r\n// export default function Classification() {\r\n//     return (\r\n//         <Layout>\r\n//             <p>Document Classification</p>\r\n//                 <DropdownButton id=\"dropdown-customers\" title=\"Customer Names\">\r\n//                     <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n//                     <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n//                     <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n//                     <Dropdown.Divider />\r\n//                     <Dropdown.Item eventKey=\"4\">Clear all selections</Dropdown.Item>\r\n//                 </DropdownButton>\r\n\r\n//                 <DropdownButton id=\"dropdown-documents\" title=\"Document Types\">\r\n//                     <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n//                     <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n//                     <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n//                     <Dropdown.Divider />\r\n//                     <Dropdown.Item eventKey=\"4\">Clear all selections</Dropdown.Item>\r\n//                 </DropdownButton>\r\n//         </Layout>\r\n//     );\r\n// }"]},"metadata":{},"sourceType":"module"}