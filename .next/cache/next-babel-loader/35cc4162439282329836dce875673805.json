{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Ndoto\\\\Documents\\\\GitHub\\\\bkfs-frontend-engineer-test-1\\\\components\\\\CustomerDocsTable.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Table from 'react-bootstrap/Table'; //Calls to determine the proper values in the classifications csv files by customer would go here\n//and populate the table below instead of the hard-coded dummy data.\n//Populating cell data\n//Step 1) Determine which customers were selected and note their classifications csv filepaths from the customers array\n//Step 2) For each selected customer, for each selected document type, find the value of the match in the appropriate csv file\n//Step 3) Build out the full table of values based on the selected customers, document types, and the located values\n//Step 4) Planned on using react-pdf to allow for hovering over document types to show the sample pdf of that document type\n//For more about editing the table data and saving as csv, please see continuation in classification.js\n\nconst CustomerDocsTable = () => {\n  return __jsx(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, \"Document Types\"), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, \"Customer 1\"), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, \"Customer 2\"), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, \"Customer 3\"))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, \"Document A\"), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, \"Document 1-A\"), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, \"Document 2-A\"), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, \"Document 3-A\")), __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, \"Document B\"), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Document 1-B\"), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"Document 2-B\"), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Document 3-B\"))));\n};\n\nexport default CustomerDocsTable;","map":{"version":3,"sources":["D:/Users/Ndoto/Documents/GitHub/bkfs-frontend-engineer-test-1/components/CustomerDocsTable.js"],"names":["React","Table","CustomerDocsTable"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC5B,SACI,MAAC,KAAD;AAAO,IAAA,OAAO,MAAd;AAAe,IAAA,QAAQ,MAAvB;AAAwB,IAAA,KAAK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,CADJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,CAPJ,CATJ,CADJ;AA0BH,CA3BD;;AA6BA,eAAeA,iBAAf","sourcesContent":["import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\n//Calls to determine the proper values in the classifications csv files by customer would go here\r\n//and populate the table below instead of the hard-coded dummy data.\r\n\r\n//Populating cell data\r\n//Step 1) Determine which customers were selected and note their classifications csv filepaths from the customers array\r\n//Step 2) For each selected customer, for each selected document type, find the value of the match in the appropriate csv file\r\n//Step 3) Build out the full table of values based on the selected customers, document types, and the located values\r\n//Step 4) Planned on using react-pdf to allow for hovering over document types to show the sample pdf of that document type\r\n\r\n//For more about editing the table data and saving as csv, please see continuation in classification.js\r\n\r\nconst CustomerDocsTable = () => {\r\n    return(\r\n        <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                    <td>Document Types</td>\r\n                    <td>Customer 1</td>\r\n                    <td>Customer 2</td>\r\n                    <td>Customer 3</td>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>Document A</td>\r\n                    <td>Document 1-A</td>\r\n                    <td>Document 2-A</td>\r\n                    <td>Document 3-A</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Document B</td>\r\n                    <td>Document 1-B</td>\r\n                    <td>Document 2-B</td>\r\n                    <td>Document 3-B</td>\r\n                </tr>\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default CustomerDocsTable;"]},"metadata":{},"sourceType":"module"}